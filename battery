#!/bin/bash

cmd="battery"
work_dir=$(cd "$(dirname "$0")" && pwd)
settings_file="/etc/battery"
daemon_dir="/Library/LaunchDaemons"
daemon_name="com.$cmd.daemon"
daemon_file="$daemon_dir/${daemon_name}.plist"
log_file="/var/log/$cmd.log"
install_dir="/usr/local/bin"

function log() {
	echo -e "$(date +'%d/%m/%Y %H:%M:%S'): $1"
}

function is_root() {
	[[ $(id -u) == 0 ]] && return
	false
}

function is_sudo() {
	sudo -n true 2> /dev/null
}

if ! is_root && [[ "$work_dir" != "$install_dir" ]]; then
	settings_file="$work_dir/settings"
fi

function get_voltage() {
	voltage=$(ioreg -l -n AppleSmartBattery -r | grep "\"Voltage\" =" | awk '{ print $3/1000 }' | tr ',' '.')
	echo "$voltage"
}

function is_charging_enabled() {
	hex_status=$($work_dir/smc -k CH0B -r | awk '{print $4}' | sed s:\)::)
	[[ "$hex_status" == "00" ]] && return
	false
}

function enable_charging() {
	sudo $work_dir/smc -k CH0B -w 00
	sudo $work_dir/smc -k CH0C -w 00
	log "ðŸ”Œâœ… Enabled battery charging"
}

function disable_charging() {
	sudo $work_dir/smc -k CH0B -w 02
	sudo $work_dir/smc -k CH0C -w 02
	log "ðŸ”ŒðŸš« Disabled battery charging"
}


function is_valid_voltage() {
	if [[ ! "$1" =~ ^[0-9]+(\.[0-9]+)?$ ]]; then
		echo "Invalid voltage: \"$1\""
		return 1
	fi
	if (($(echo "$1 < 11.1" | bc -l) || $(echo "$1 > 12.6" | bc -l))); then
		echo "Voltage out of range: ${1}V"
		return 1
	fi
	return 0
}

function status() {
	voltage=$(get_voltage)
	cell_voltage=$(echo "scale=2; $voltage / 3" | bc -l)
	echo "Current voltage: ${voltage}V (${cell_voltage}V per cell)"
	
	settings=$(cat $settings_file 2>/dev/null)
	if [[ $settings ]]; then
		u1=$(echo $settings | awk '{print $1}')
		u2=$(echo $settings | awk '{print $2}')
		uc1=$(echo "scale=2; $u1 / 3" | bc -l)
		uc2=$(echo "scale=2; $u2 / 3" | bc -l)
		echo "Set voltage: ${u1}V-${u2}V (${uc1}V-${uc2}V per cell)"
	fi

	is_charging="no"
	if is_charging_enabled; then
		is_charging="yes"
	fi
	echo "Charging: $is_charging"
}

action=$1
p1=$2
p2=$3

function ensure_sudo {
	sudo -v
	if ! is_sudo; then
    	exit 1
	fi
}

function is_yes {
	[[ "$1" == "yes" ]] && return
	[[ "$1" == "enable" ]] && return
	[[ "$1" == "1" ]] && return
	[[ "$1" == "true" ]] && return
	[[ "$1" == "start" ]] && return
	false
}

if [[ "$action" == "status" ]]; then
	status
fi

if [[ "$action" == "log" || "$action" == "logs" ]]; then
	if [[ "$p1" == "-f" ]]; then
		tail -f $log_file
	else
		tail $log_file
	fi
fi

if [[ "$action" == "set" ]]; then
	if ! is_valid_voltage "$p1"; then exit 1; fi
	if ! is_valid_voltage "$p2"; then exit 1; fi
	if (($(echo "$p1 >= $p2" | bc -l))); then
		echo "First voltage must be lower than second"
		exit 1
	fi
	
	echo "$p1 $p2" > $settings_file
	echo "Set voltage between ${p1}V and ${p2}V and saved to $settings_file"
fi

function maintain() {
	> $log_file
	log "ðŸ”§ Maintaining voltage"

	while true; do
		settings=$(cat $settings_file 2>/dev/null)
		if [[ ! $settings ]]; then
			sleep 5
			continue
		fi
		
		u0=$(get_voltage)
		u1=$(echo $settings | awk '{print $1}')
		u2=$(echo $settings | awk '{print $2}')		
		is_charging=$(! is_charging_enabled)$?
		# echo "cur:$u0 min:$u1 max:$u2 chr:$is_charging"

		if (($(echo "$u0 < $u1" | bc -l))) && [ $is_charging = 0 ]; then
			log "cur:$u0 < min:$u1"
			enable_charging
		elif (($(echo "$u0 >= $u2" | bc -l))) && [ $is_charging = 1 ]; then
			log "cur:$u0 >= max:$u2"
			disable_charging
		fi
		
		sleep 5
	done
}

if [[ "$action" == "charge" ]]; then
	if [[ "$p1" == "maintain" ]]; then
		maintain
	elif is_yes $p1 || [[ $p1 == "" ]]; then
		enable_charging
	else
		disable_charging
	fi
fi

function install() {
	dst_file="$install_dir/$cmd"
	sudo cp "$work_dir/$cmd" "$work_dir/smc" "$install_dir"

	sudo chmod u=rwx,g=rx,o=rx "$dst_file" "$install_dir/smc"
	sudo chown root "$dst_file" "$install_dir/smc"

	sudo touch $settings_file
	sudo chmod 777 $settings_file

	daemon_definition="
<?xml version=\"1.0\" encoding=\"UTF-8\"?>
<!DOCTYPE plist PUBLIC \"-//Apple//DTD PLIST 1.0//EN\" \"http://www.apple.com/DTDs/PropertyList-1.0.dtd\">
<plist version=\"1.0\">
	<dict>
		<key>Label</key>
		<string>$daemon_name</string>
		<key>ProgramArguments</key>
		<array>
			<string>$dst_file</string>
			<string>charge</string>
			<string>maintain</string>
		</array>
		<key>StandardOutPath</key>
		<string>$log_file</string>
		<key>StandardErrorPath</key>
		<string>$log_file</string>
		<key>RunAtLoad</key>
		<true/>
	</dict>
</plist>
"

	sudo mkdir -p $daemon_dir
	echo "$daemon_definition" | sudo tee "$daemon_file" > /dev/null
	sudo launchctl bootstrap system $daemon_file
	sudo launchctl enable system/$daemon_name
}

function uninstall() {
	sudo launchctl bootout system $daemon_file
	sudo rm $daemon_file 2>/dev/null
	sudo rm "/usr/local/bin/$cmd" "/usr/local/bin/smc"
}

if [[ "$action" == "install" ]]; then
	ensure_sudo
	install
elif [[ "$action" == "uninstall" ]]; then
	ensure_sudo
	uninstall
fi
